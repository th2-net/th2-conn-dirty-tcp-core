/*
 * Copyright 2025 Exactpro (Exactpro Systems Limited)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    alias(libs.plugins.th2.publish)
    alias(libs.plugins.kotlin.jvm)
    id 'maven-publish'
}

group = 'com.exactpro.th2'
version = release_version

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions.freeCompilerArgs += '-Xjvm-default=all-compatibility'
}

repositories {
    mavenCentral()

    maven {
        url 'https://s01.oss.sonatype.org/content/repositories/releases/'
    }

    mavenLocal()

    configurations.configureEach {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
        resolutionStrategy.cacheDynamicVersionsFor 0, 'seconds'
    }
}

dependencies {
    implementation(libs.th2.common) {
        exclude group: 'com.exactpro.th2', module: 'cradle-core'
        exclude group: 'com.exactpro.th2', module: 'cradle-cassandra'
    }
    implementation(libs.th2.common.utils)
    implementation(libs.th2.netty.bytebuf.utils)

    implementation 'org.slf4j:slf4j-api'

    implementation "org.apache.commons:commons-lang3"

    implementation(libs.kotlin.reflect)
    implementation(libs.kotlin.logging)

    implementation group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310'
    implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin'
    implementation group: 'io.netty', name: 'netty-all'
    implementation(libs.jctools.core)

    testImplementation(libs.kotlin.test.junit5)
}

test {
    useJUnitPlatform()
}

dependencyCheck {
    setSuppressionFile("suppressions.xml")
}